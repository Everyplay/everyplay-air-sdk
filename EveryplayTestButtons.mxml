<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 creationComplete="vgroup1_creationCompleteHandler(event)"
		 remove="vgroup1_removeHandler(event)"
		 implements="com.everyplay.air.IEveryplayListener">
	
	<fx:Script>
		<![CDATA[
			import com.everyplay.air.Everyplay;
			import com.everyplay.air.IEveryplayListener;

			import mx.events.FlexEvent;
			
			protected function startRecordingClicked(event:MouseEvent):void
			{
				if (!Everyplay.isSupported() || !Everyplay.isRecordingSupported()) return;
				Everyplay.startRecording();
			}
			
			protected function stopRecordingClicked(event:MouseEvent):void
			{
				if (!Everyplay.isSupported() || !Everyplay.isRecordingSupported()) return;
				Everyplay.stopRecording();
			}
			
			protected function playLastRecordingClicked(event:MouseEvent):void
			{
				if (!Everyplay.isSupported()) return;
				Everyplay.playLastRecording();
			}
			
			protected function showSharingModal(event:MouseEvent):void
			{
				if (!Everyplay.isSupported()) return;
				Everyplay.showEveryplaySharingModal();
			}
			
			protected function showEveryplay(event:MouseEvent):void
			{
				if (!Everyplay.isSupported()) return;
				Everyplay.showEveryplay();
			}

			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				Everyplay.addListener(this);
			}

			protected function vgroup1_removeHandler(event:FlexEvent):void
			{
				Everyplay.removeListener(this);
			}

			/* SHOW / HIDE */
			public function onEveryplayShown () : void
			{
			}

			public function onEveryplayHidden () : void
			{
			}

			/* RECORDING */
			public function onEveryplayReadyForRecording (enabled:int) : void
			{
			}

			public function onEveryplayRecordingStarted () : void
			{
				buttonsWhenRecorded.includeInLayout = false;
				buttonsWhenRecorded.visible = false;
				startRecordingButton.visible = false;
				startRecordingButton.includeInLayout = false;
				stopRecordingButton.visible = true;
				stopRecordingButton.includeInLayout = true;
			}

			public function onEveryplayRecordingStopped () : void
			{
				buttonsWhenRecorded.includeInLayout = true;
				buttonsWhenRecorded.visible = true;
				startRecordingButton.visible = true;
				startRecordingButton.includeInLayout = true;
				stopRecordingButton.visible = false;
				stopRecordingButton.includeInLayout = false;
			}

			/* FACECAM */
			public function onEveryplayFaceCamSessionStarted () : void
			{
			}

			public function onEveryplayFaceCamRecordingPermission (granted:int) : void
			{
			}

			public function onEveryplayFaceCamSessionStopped () : void
			{
			}

			/* UPLOAD */
			public function onEveryplayUploadDidStart (videoId:int) : void
			{
			}

			public function onEveryplayUploadDidProgress (videoId:int, progress:Number) : void
			{
			}

			public function onEveryplayUploadDidComplete (videoId:int) : void
			{
			}

			/* THUMBNAIL */
			public function onEveryplayThumbnailReadyAtFilePath (thumbnailFilePath:String) : void
			{
			}

			public function onEveryplayThumbnailReadyAtUrl (thumbnailUrl:String) : void
			{
			}

			public function onEveryplayThumbnailReadyAtTextureId (textureId:int, portraitMode:int) : void
			{
			}

			/* ACCOUNT */
			public function onEveryplayAccountDidChange () : void
			{
			}
		]]>
	</fx:Script>
	
	<s:Button click="showEveryplay(event)">
		<s:label>Open Everyplay</s:label>
	</s:Button>
	
	<s:Group>
		<s:Button id="startRecordingButton" click="startRecordingClicked(event)">
			<s:label>Start Recording</s:label>
		</s:Button>
		
		<s:Button id="stopRecordingButton" click="stopRecordingClicked(event)" visible="false" includeInLayout="false">
			<s:label>Stop Recording</s:label>
		</s:Button>			
	</s:Group>
	
	<s:VGroup id="buttonsWhenRecorded" visible="false" includeInLayout="false">
		<s:Button id="playLastRecordingButton" click="playLastRecordingClicked(event)">
			<s:label>Play Last Recording</s:label>
		</s:Button>
		<s:Button id="showSharingModalButton" click="showSharingModal(event)">
			<s:label>Show Sharing Modal</s:label>
		</s:Button>
	</s:VGroup>
	

</s:VGroup>
